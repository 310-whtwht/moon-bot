---
alwaysApply: true
---

# 実装チェックリスト - moomoo 初期対応

## 優先度: 高（基盤・必須機能）

### 1. プロジェクト基盤構築
- [x] **Monorepo 構成設定**
  - [x] `apps/web` (Next.js App Router)
  - [x] `apps/api` (Go + gin)
  - [x] `apps/bot` (Go worker)
  - [x] 共通ライブラリ・設定ファイル

- [x] **開発環境セットアップ**
  - [x] Docker Compose（MySQL 8, Redis）
  - [x] Go modules 設定
  - [x] Node.js 依存関係（Next.js, Tailwind, shadcn/ui）
  - [x] Bruno テスト環境

### 2. データベース設計・実装
- [x] **MySQL スキーマ設計**
  - [x] `strategy_packages/versions/params` テーブル
  - [x] `orders` テーブル（冪等キー対応）
  - [x] `trades` テーブル
  - [x] `audit_logs` テーブル
  - [x] `universe_symbols` テーブル

- [x] **Redis Streams 設定**
  - [x] 約定イベントストリーム
  - [x] サーキットイベントストリーム
  - [x] 戦略ログストリーム
  - [x] DLQ/ACK/Retry 機構

### 3. ブローカーアダプタ（moomoo）
- [ ] **Futu OpenD 接続基盤**
  - [ ] TCP/WebSocket 接続管理
  - [ ] 認証・セッション管理
  - [ ] 再接続・再購読ロジック

- [ ] **データ購読機能**
  - [ ] 銘柄×サブタイプ管理（2枠/銘柄制限）
  - [ ] Tick データ購読
  - [ ] K線データ購読（1m/5m/15m/1d）
  - [ ] レート制限対応

- [ ] **発注機能**
  - [ ] Market/Limit/Stop/Stop-Limit/Trailing 注文
  - [ ] 擬似 OCO 実装
  - [ ] 空売り可否チェック
  - [ ] 冪等性保証（client_order_id）

### 4. 認証・セキュリティ
- [x] **NextAuth 設定**
  - [x] 2FA 必須設定
  - [x] TOTP（Microsoft/Google Authenticator）
  - [x] API キー管理（AES-GCM + OCI Vault）

## 優先度: 中（コア機能）

### 5. 戦略エンジン
- [x] **Starlark VM 統合**
  - [x] ビルトイン関数（order/risk/data/ind/state/log）
  - [x] イベントハンドラー（on_bar, on_order_fill）
  - [x] パラメータ管理

- [x] **戦略テンプレート実装**
  - [x] EMA クロス戦略
  - [x] RSI リバーサル戦略
  - [x] ブレイクアウト戦略
  - [x] 一目均衡表戦略

### 6. リスク・執行エンジン
- [ ] **リスク管理**
  - [ ] ATR ベースサイズ計算（0.25%/trade）
  - [ ] 日次/週次 DD 監視（1%/3%）
  - [ ] 同時ポジション制限

- [ ] **執行管理**
  - [ ] スリッページモデル（固定+動的）
  - [ ] 再試行ロジック（最大3回）
  - [ ] サーキット制御（連続失敗5/未約定10）

### 7. バックテスト機能
- [ ] **バックテストエンジン**
  - [ ] CLI/HTTP 共通 Facade
  - [ ] CSV/JSON 入力対応
  - [ ] パフォーマンス指標計算（PF/Sharpe/MaxDD/勝率/SQN/CAGR）
  - [ ] equity_curve / by_month 出力

- [ ] **Walk-Forward 分析**
  - [ ] Redis Streams ジョブ化
  - [ ] 並列実行対応

### 8. データ管理
- [ ] **ヒストリカルデータ同期**
  - [ ] moomoo からの調整済みデータ取得
  - [ ] Tiingo → Yahoo Finance 自動補完
  - [ ] 監査ログ記録

- [ ] **データ保存・アーカイブ**
  - [ ] MySQL（直近30日）
  - [ ] Object Storage（gzip/zstd）
  - [ ] 90日→低頻度、365日→アーカイブ層

## 優先度: 中（UI・運用）

### 9. Web UI（Next.js）
- [x] **戦略センター**
  - [x] テンプレート選択・編集
  - [x] パラメータ設定
  - [x] バックテスト実行
  - [x] Paper → Live ワークフロー

- [x] **モニタリング画面**
  - [x] PnL/MaxDD/勝率表示
  - [x] サーキットイベント表示
  - [x] 戦略ログ表示

- [x] **設定・管理画面**
  - [x] ユニバース設定
  - [x] リスク設定
  - [x] Kill スイッチ（確認ダイアログ付き）

### 9.1 追加要件対応
- [ ] **Paper Trading 初回必須機能**
  - [ ] `trd_env=SIMULATE` の強制設定
  - [ ] 成行/指値・DAY限定の制限
  - [ ] 約定ログの不完全性を許容する仕組み
  - [ ] Paper→Live ゲート（20取引・DD/PF 条件）
  - [ ] Live は最小株数による段階的検証

- [ ] **調整済みヒストリカルの自動補完**
  - [ ] moomoo で未提供時の Tiingo → Yahoo Finance 順での欠損補完
  - [ ] `SyncHistoricalData` ユースケースの実装
  - [ ] 補完ソースの監査ログ記録

- [ ] **税務エクスポート二系統**
  - [ ] TWS 形式（米国標準）CSV
  - [ ] 日本向け「年間取引報告書風」CSV
  - [ ] 任意期間での出力機能

- [ ] **moomoo API 制約対応**
  - [ ] 購読上限管理（100/300/1000/2000枠）
  - [ ] レート制限対応（エンドポイント毎）
  - [ ] OCO 擬似実装（相互キャンセル）
  - [ ] 再接続再購読機能
  - [ ] 空売り可否 API 対応

### 9.2 要件定義書からの追加機能
- [ ] **市場カレンダー対応**
  - [ ] 米国市場カレンダー（iCal）での自動停止機能
  - [ ] プレ/アフターマーケット初期非対応設定
  - [ ] 祝日自動検知・停止機能

- [ ] **ユニバース管理機能**
  - [ ] S&P100 初期ユニバース設定
  - [ ] 週次スクリーニング更新（出来高/価格帯/ボラ条件）
  - [ ] UI からの条件編集機能

- [ ] **監視・通知機能強化**
  - [ ] 立会時間（America/New_York 09:30–16:00, DST対応）の自動稼働
  - [ ] JST 夜間の日次集計
  - [ ] Slack/Email 通知の中核機能

- [ ] **戦略テンプレート拡張**
  - [ ] EMA クロス戦略（EMA9/EMA21 + ATR/出来高フィルタ）
  - [ ] RSI リバーサル戦略（RSI 反発/反落 + BB/乖離/最大保有バー）
  - [ ] ブレイクアウト戦略（N 日高値/安値ブレイク + ATR ベース SL/TP）
  - [ ] 一目均衡表戦略（雲抜け/転換×基準/遅行スパン/雲厚み）

### 9.3 基本設計書からの追加機能
- [ ] **Docker Compose 開発環境**
  - [ ] 完全な開発環境構成（MySQL 8, Redis, MinIO, Elasticsearch, Kibana）
  - [ ] Prometheus/Grafana 監視環境
  - [ ] ヘルスチェック設定

- [ ] **セキュリティ強化**
  - [ ] API キー管理（AES-GCM + OCI Vault）
  - [ ] RBAC（Role-Based Access Control）
  - [ ] 暗号化機能

- [ ] **監視・ログ管理**
  - [ ] ELK Stack（Elasticsearch, Logstash, Kibana）
  - [ ] Prometheus/Grafana メトリクス収集
  - [ ] ファイルビートによるログ収集

### 9.4 詳細設計書からの追加機能
- [ ] **エラーハンドリング・バリデーション**
  - [ ] 包括的なエラーハンドリング
  - [ ] 入力バリデーション強化
  - [ ] エラー通知機能

- [ ] **運用・保守手順**
  - [ ] バックアップ・復旧手順
  - [ ] ログローテーション設定
  - [ ] パフォーマンス監視

- [ ] **ファイル命名規則**
  - [ ] 入力 CSV: `SYMBOL_TIMEFRAME.csv`（例: `AAPL_1m.csv`）
  - [ ] 出力 CSV: `pnl_export_tws_YYYY.csv`, `pnl_export_japan_YYYY.csv`
  - [ ] ドキュメント命名規則の統一

### 10. API エンドポイント
- [x] **REST API 実装**
  - [x] `/orders` - 発注・管理
  - [x] `/strategies` - 戦略管理
  - [x] `/backtests` - バックテスト実行
  - [ ] `/exports` - 税務エクスポート

- [x] **ヘルスチェック拡張**
  - [x] `/healthz` 詳細監視
  - [x] lag/滞留量/再接続回数/VM クォータヒット数

### 11. ワーカー（Bot）
- [x] **戦略実行エンジン**
  - [x] 銘柄×戦略ワーカー
  - [x] `on_bar` イベント処理
  - [x] サーキット制御

## 優先度: 低（拡張機能）

### 12. 税務エクスポート
- [x] **TWS 形式エクスポート**
  - [x] CSV 出力（米国標準）
  - [x] 全フィールド対応

- [x] **日本向けエクスポート**
  - [x] 年間取引報告書風 CSV
  - [x] 証券各社対応テンプレート

### 13. 通知・監視
- [x] **Slack/Email 通知**
  - [x] サーキットイベント通知
  - [x] 日次集計通知
  - [x] エラー通知

### 14. テスト・品質保証
- [x] **Bruno テスト**
  - [x] エンドポイント毎テスト
  - [x] 日本語フォルダ構成
  - [x] CI/CD 統合

- [x] **単体・統合テスト**
  - [x] Go テスト（戦略エンジン）
  - [x] Next.js テスト（UI コンポーネント）
  - [x] E2E テスト

### 15. ドキュメント・運用
- [x] **技術ドキュメント**
  - [x] API 仕様書
  - [x] 戦略開発ガイド
  - [x] 運用マニュアル

- [x] **監査・ログ**
  - [x] トレード ID 鎖状トレース
  - [x] 可視化ツール

## 実装状況

現時点で以下の主要機能が未実装または未完了です。

- ブローカーアダプタの実接続・注文・購読処理
- リスク・執行エンジンによる損失監視とサーキット制御
- バックテストエンジンおよび Walk-Forward 分析
- ヒストリカルデータ同期とアーカイブ

## 注意事項

- **Paper Trading 必須**: 全ての戦略は Paper → Live の段階的検証を強制
- **moomoo API 制約**: 購読上限、レート制限、OCO 擬似実装に注意
- **セキュリティ**: 2FA 必須、API キー暗号化、監査ログ必須
- **監視**: `/healthz` による包括的なシステム監視